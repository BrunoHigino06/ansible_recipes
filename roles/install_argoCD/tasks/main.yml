---
- name: Update package lists
  apt:
    update_cache: yes
  register: update_cache_result

- name: Upgrade all packages to the latest version
  apt:
    upgrade: dist
    autoremove: yes
    autoclean: yes
  register: upgrade_result

- name: Check if the argocd namespace exists
  shell: kubectl get namespace argocd --ignore-not-found
  register: argocd_namespace
  changed_when: false

- name: Create the argocd namespace if it does not exist
  command: sudo kubectl create namespace argocd
  when: argocd_namespace.stdout == ""


- name: Install argoCD on the argoCD namespace
  command: sudo kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

- name: Download Argo CD binary
  ansible.builtin.get_url:
    url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    dest: /tmp/argocd-linux-amd64
    mode: '0555'

- name: Install Argo CD binary
  ansible.builtin.command:
    cmd: mv /tmp/argocd-linux-amd64 /usr/local/bin/argocd
    creates: /usr/local/bin/argocd

- name: Ensure proper permissions for Argo CD binary
  ansible.builtin.file:
    path: /usr/local/bin/argocd
    mode: '0555'

- name: Remove the downloaded Argo CD binary
  ansible.builtin.file:
    path: /tmp/argocd-linux-amd64
    state: absent

- name: Wait for ArgoCD pods to be in running state
  shell: kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o jsonpath="{.items[0].status.phase}"
  register: argocd_pod_status
  until: argocd_pod_status.stdout == "Running"
  retries: 30
  delay: 10
  changed_when: false

- name: Expose argoCD
  command: sudo kubectl port-forward svc/argocd-server -n argocd 8080:443